{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Covid19 Api",
    "description": "Rest Api that allows to manage tests to Covid19"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Covid19 Tests",
      "description": "Api for Covid19 tests in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "description": "Creates a new user in the system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$href": "#/definitions/createUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Users"
            }
          }
        }
      }
    },
    "users/technical": {
      "post": {
        "tags": ["Users"],
        "description": "Creates a new user in the system with the role technical",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$href": "#/definitions/createUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      }
    },
    "users/admin": {
      "post": {
        "tags": ["Users"],
        "description": "Creates a new user in the system with the role admin",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$href": "#/definitions/createUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": "true",
          "description": "Id of the user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "Product is found",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Product is deleted",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      }
    },
    "user/{userId}/password": {
      "put": {
        "summary": "Updates the password of the user with the given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": "true",
            "description": "Id of the user that we want to find",
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User with new value of property password",
            "schema": {
              "$href": "#/definitions/updatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated",
            "schema": {
              "$href": "#/definitions/User"
            }
          }
        }
      }
    },
    "user/{userId}/history": {
      "get": {
        "summary": "Get all the requests of the user with the given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": "true",
            "description": "Id of the user that we want to find",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Requests"
            }
          }
        }
      }
    },
    "users/infected": {
      "get": {
        "summary": "Get the number of infected users",
        "tags": ["Stats"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Count"
            }
          }
        }
      }
    },
    "user/{userId}/numberOfTests": {
      "get": {
        "summary": "Get the number of requests the user with the given ID has made",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": "true",
            "description": "Id of the user that we want to find",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Count"
            }
          }
        }
      }
    },
    "/requests": {
      "post": {
        "tags": ["Requests"],
        "description": "Creates a new request in the system",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request that we want to create",
            "schema": {
              "$href": "#/definitions/createRequest"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New request is created",
            "schema": {
              "$href": "#/definitions/Request"
            }
          },
          "400": {
            "description": "The user still has unfinished requests"
          }
        }
      },
      "get": {
        "tags": ["Requests"],
        "summary": "Get all requests in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Requests"
            }
          }
        }
      }
    },
    "/request/{requestId}": {
      "parameters": [
        {
          "name": "requestId",
          "in": "path",
          "required": "true",
          "description": "Id of the request that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Requests"],
        "summary": "Get request with given ID",
        "responses": {
          "200": {
            "description": "Request is found",
            "schema": {
              "$href": "#/definitions/Request"
            }
          }
        }
      }
    },
    "requests/average": {
      "get": {
        "summary": "Get the average of tests by user",
        "tags": ["Stats"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Count"
            }
          }
        }
      }
    },
    "request/{requestId}/schedule": {
      "put": {
        "summary": "Set the date the test with the given ID will be realized",
        "tags": ["Requests"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": "true",
            "description": "Id of the request that we want to find",
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request with new value of property dataExame",
            "schema": {
              "$href": "#/definitions/scheduleExam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Date updated",
            "schema": {
              "$href": "#/definitions/Request"
            }
          },
          "400": {
            "description": "Test´s date lesser than today´s date or already finished request"
          }
        }
      }
    },
    "request/{requestId}/setResult": {
      "put": {
        "summary": "Set the result of the test with the given ID",
        "tags": ["Requests"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": "true",
            "description": "Id of the request that we want to find",
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request with new value of property resultado",
            "schema": {
              "$href": "#/definitions/setResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result updated",
            "schema": {
              "$href": "#/definitions/Request"
            }
          },
          "400": {
            "description": "Request already finished"
          }
        }
      }
    },
    "requests/total": {
      "get": {
        "summary": "Get the total of tests realized",
        "tags": ["Stats"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$href": "#/definitions/Count"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createUser": {
      "required": ["_id", "cartaoCidadao", "password"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "cartaoCidadao": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "updatePassword": {
      "required": ["password"],
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": ["_id", "cartaoCidadao", "password"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "cartaoCidadao": {
          "type": "string",
          "uniqueItems": true
        },
        "role": {
          "type": "string"
        },
        "estado": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$href": "#/definitions/User"
    },
    "createRequest": {
      "required": [
        "_id",
        "paciente",
        "pessoaRisco",
        "encaminhado",
        "trabalhoRisco"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "paciente": {
          "type": "string"
        },
        "encaminhado": {
          "type": "boolean"
        },
        "pessoaRisco": {
          "type": "boolean"
        },
        "trabalhoRisco": {
          "type": "boolean"
        }
      }
    },
    "Request": {
      "required": [
        "_id",
        "paciente",
        "pessoaRisco",
        "encaminhado",
        "trabalhoRisco"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "paciente": {
          "type": "string"
        },
        "encaminhado": {
          "type": "boolean"
        },
        "pessoaRisco": {
          "type": "boolean"
        },
        "trabalhoRisco": {
          "type": "boolean"
        },
        "dataExame": {
          "type": "Date"
        },
        "resultado": {
          "type": "string"
        }
      }
    },
    "Requests": {
      "type": "array",
      "$href": "#/definitions/Request"
    },
    "scheduleExame": {
      "required": ["dataExame"],
      "properties": {
        "dataExame": {
          "type": "Date"
        }
      }
    },
    "setResult": {
      "required": ["resultado"],
      "properties": {
        "resultado": {
          "type": "String"
        }
      }
    },
    "Count": {
      "properties": {
        "count": {
          "type": "number"
        }
      }
    }
  }
}
